{"version":3,"sources":["components/Card.js","utils/constants.js","components/CardList.js","components/CardListDead.js","components/Header.js","components/Footer.js","App.js","utils/apiKey.js","serviceWorker.js","index.js"],"names":["container","display","flexDirection","alignItems","width","height","borderRadius","backgroundColor","boxShadow","margin","imageContainer","overflow","position","images","objectFit","objectPosition","titles","justifyContent","Card","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","pressF","e","keyCode","alive","reward","rewardMe","sentiment","feel","emoji","state","negative","net","neutral","positive","total","netArr","loaded","onDataChange","name","toLowerCase","document","addEventListener","setState","_this2","newName","Firebase","database","ref","on","snapshot","charVals","val","getCharData","prevState","length","lenDiff","objectSpread","push","shift","str","char","_this3","sentimentImg","getImageIdx","react_default","a","createElement","style","className","onClick","alt","src","build_default","type","config","lifetime","spread","elementCount","elementSize","springAnimation","paddingTop","paddingRight","es","smooth","data","gradient","radius","strokeWidth","strokeLinecap","marginTop","Component","list","flexWrap","marginBottom","characters","Thrones","Jon","Daenerys","Cersei","Arya","Sansa","Jaime","Bran","Tyrion","The Hound","Brienne","Gendry","Grey Worm","Euron","Tormund","Davos","Podrick","Bronn","CardList","keys","map","key","i","components_Card","values","Theon","Jorah","Melisandre","CardListDead","headerText","marginLeft","marginRight","clear","cursor","headerSub","fontFamily","textAlign","fontWeight","fontSize","color","Header","window","location","reload","bottom","Footer","href","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","GotSentiment","components_Header","components_CardList","components_CardListDead","components_Footer","Boolean","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a4a8b6f0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Reward from \"react-rewards\";\nimport Firebase from \"firebase\";\nimport { HAPPY_FLOOR, SAD_CEILING } from \"../utils/constants\";\nimport Trend from \"react-trend\";\n\nconst container = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  alignItems: \"center\",\n  width: \"359px\",\n  height: \"200px\",\n  borderRadius: \"8px\",\n  backgroundColor: \"#FBFBFB\",\n  boxShadow: \"0px 4px 8px 0px rgba(0,0,0,0.15)\",\n  margin: \"20px 20px\"\n};\n\nconst imageContainer = {\n  height: \"184px\",\n  width: \"184px\",\n  borderRadius: \"50%\",\n  overflow: \"hidden\",\n  position: \"relative\",\n  margin: \"4px 8px 4px 4px\"\n};\n\nconst images = {\n  objectFit: \"cover\",\n  objectPosition: \"40% 50%\",\n  width: \"100%\",\n  height: \"100%\"\n};\n\nconst titles = {\n  width: \"175px\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"flex-start\"\n};\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      negative: 0,\n      net: 0,\n      neutral: 0,\n      positive: 0,\n      total: 0,\n      netArr: [],\n      sentiment: \"NEUTRAL\",\n      loaded: false\n    };\n  }\n\n  pressF = e => {\n    const keyCode = e.keyCode;\n    if (keyCode === 70) {\n      if (this.props.alive === false) {\n        this.reward.rewardMe();\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.onDataChange(this.props.name.toLowerCase());\n    document.addEventListener(\"keydown\", this.pressF);\n  }\n\n  componentDidUpdate() {\n    if (!this.state.loaded) {\n      return this.setState({ loaded: true });\n    }\n  }\n\n  onDataChange(name) {\n    let newName = name;\n    if (name === \"grey worm\") {\n      newName = \"greyworm\";\n    }\n    if (name === \"the hound\") {\n      newName = \"thehound\";\n    }\n    const charRef = Firebase.database().ref(\n      \"/characters/\" + newName + \"/data/\"\n    );\n    charRef.on(\"value\", snapshot => {\n      let charVals = snapshot.val();\n      if (charVals == null) {\n        charVals = this.state;\n      }\n      charVals.sentiment = this.getCharData(charVals);\n      const prevState = this.state.sentiment;\n      this.setState(charVals, () => {\n        // on callback, compare current sentiment to previous, \"reward\" if changed\n        if (this.state.sentiment !== prevState) {\n          if (this.state.loaded) {\n            this.reward.rewardMe();\n          }\n        }\n      });\n    });\n\n    const arrRef = Firebase.database().ref(\n      \"/characters/\" + newName + \"/netArr/\"\n    );\n    arrRef.on(\"value\", snapshot => {\n      let netArr = snapshot.val();\n\n      // to keep whole graph\n      if (netArr == null) {\n        netArr = this.state.netArr;\n      }\n      if (netArr.length > 0) {\n        const lenDiff = netArr.length - this.state.netArr.length;\n        if (lenDiff > 1) {\n          this.setState({ ...this.state, netArr }, () => {});\n        } else if (lenDiff === 1 || lenDiff === 0) {\n          this.state.netArr.push(netArr[netArr.length - 1]);\n          //ensure local copy matches length from python backend\n          if (this.state.netArr.length > netArr.length) {\n            this.state.netArr.shift();\n          }\n        }\n      }\n    });\n  }\n\n  getImageIdx(str) {\n    switch (str) {\n      case \"POSITIVE\":\n        return 0;\n      case \"NEUTRAL\":\n        return 1;\n      case \"NEGATIVE\":\n        return 2;\n      default:\n        return 1;\n    }\n  }\n\n  getCharData(char) {\n    if (char == null || char.net == null) {\n      return \"NEUTRAL\";\n    }\n    if (char != null) {\n      if (char.net > HAPPY_FLOOR) {\n        return \"POSITIVE\";\n      } else if (char.net <= SAD_CEILING) {\n        return \"NEGATIVE\";\n      } else {\n        return \"NEUTRAL\";\n      }\n    }\n  }\n\n  sentiment = feel => {\n    switch (feel) {\n      case \"POSITIVE\":\n        return \"sentimentHappy\";\n      case \"NEUTRAL\":\n        return \"sentimentNeutral\";\n      case \"NEGATIVE\":\n        return \"sentimentSad\";\n      default:\n        return \"sentimentNeutral\";\n    }\n  };\n\n  emoji = feel => {\n    switch (feel) {\n      case \"POSITIVE\":\n        return [\"😃\", \"💯\", \"🎉\"];\n      case \"NEUTRAL\":\n        return [\"😐\", \"😌\", \"🆗\"];\n      case \"NEGATIVE\":\n        return [\"😭\", \"😔\", \"😟\"];\n      default:\n        return [\"😐\", \"😌\", \"🆗\"];\n    }\n  };\n\n  render() {\n    const sentimentImg = this.props.images[\n      this.getImageIdx(this.state.sentiment)\n    ];\n    return (\n      <div\n        style={container}\n        className=\"grow\"\n        onClick={() => this.reward.rewardMe()}\n      >\n        <div style={imageContainer}>\n          <img alt={sentimentImg} src={sentimentImg} style={images} />\n        </div>\n\n        <div style={titles}>\n          <h3>{this.props.name}</h3>\n          <h2 className={this.sentiment(this.state.sentiment)}>\n            {this.state.sentiment}\n          </h2>\n\n          <Reward\n            ref={ref => {\n              this.reward = ref;\n            }}\n            type=\"emoji\"\n            config={{\n              emoji: this.props.alive\n                ? this.emoji(this.state.sentiment)\n                : [\"🙏\", \"🙇\", \"⚰️️\", \"✊\"],\n              lifetime: 100,\n              spread: 45,\n              elementCount: 8,\n              elementSize: 40,\n              springAnimation: true\n            }}\n          />\n\n          <h5>TWEETS</h5>\n          <h4> {this.state.total}</h4>\n          <div style={{ paddingTop: \"8px\", paddingRight: \"20px\" }}>\n            <Trend\n              smooth\n              data={this.state.netArr}\n              gradient={[\"#732727\", \"#407398\", \"#3A7737\"]}\n              radius={30}\n              strokeWidth={6}\n              strokeLinecap={\"round\"}\n            />\n            {/*<h6 style={{ marginTop: \"12px\" }}>Tweets from </h6>*/}\n            {/*<h6 style={{ marginTop: \"0px\" }}>5/12 20:30 EDT - 5/13 4:00 EDT</h6>*/}\n            {/*<h6>Past {this.state.netArr.length*30-30} Seconds</h6>*/}\n\n            <h6 style={{ marginTop: \"12px\" }}>Tweets from past 30 minutes</h6>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","export const HAPPY_FLOOR = 0;\nexport const SAD_CEILING = -2;","import React, { Component } from \"react\";\nimport Card from \"./Card.js\";\n\nconst list = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"wrap\",\n  justifyContent: \"center\",\n  margin: \"12px 1%\",\n  marginBottom: \"40px\"\n};\n\nlet characters = {\n  Thrones: [\"./thronesHappy.gif\", \"./thronesNeutral.gif\", \"./thronesSad.gif\"],\n  Jon: [\"./jonHappy.gif\", \"./jonNeutral.gif\", \"./jonSad.gif\"],\n  Daenerys: [\"./danyHappy.gif\", \"./danyNeutral.gif\", \"./danySad.gif\"],\n  Cersei: [\"./cerseiHappy.gif\", \"./cerseiNeutral.gif\", \"./cerseiSad.gif\"],\n  Arya: [\"./aryaHappy.gif\", \"./aryaNeutral.gif\", \"./aryaSad.gif\"],\n  Sansa: [\"./sansaHappy.gif\", \"./sansaNeutral.gif\", \"./sansaSad.gif\"],\n  Jaime: [\"./jaimeHappy.gif\", \"./jaimeNeutral.gif\", \"./jaimeSad.gif\"],\n  Bran: [\"./branHappy.gif\", \"./branNeutral.gif\", \"./branSad.gif\"],\n  Tyrion: [\"./tyrionHappy.gif\", \"./tyrionNeutral.gif\", \"./tyrionSad.gif\"],\n  \"The Hound\": [\"./houndHappy.gif\", \"./houndNeutral.gif\", \"./houndSad.gif\"],\n  Brienne: [\"./brienneHappy.gif\", \"./brienneNeutral.gif\", \"./brienneSad.gif\"],\n  Gendry: [\"./gendryHappy.gif\", \"./gendryNeutral.gif\", \"./gendrySad.gif\"],\n  \"Grey Worm\": [\"./grey.gif\", \"./grey.gif\", \"./grey.gif\"],\n  Euron: [\"./euronHappy.gif\", \"./euronNeutral.gif\", \"./euronSad.gif\"],\n  Tormund: [\"./tormundHappy.gif\", \"./tormundNeutral.gif\", \"./tormundSad.gif\"],\n  Davos: [\"./davosHappy.gif\", \"./davosNeutral.gif\", \"./davosSad.gif\"],\n  Podrick: [\"./podrickHappy.gif\", \"./podrickNeutral.gif\", \"./podrickSad.gif\"],\n  Bronn: [\"./bronnHappy.gif\", \"./bronnNeutral.gif\", \"./bronnSad.gif\"]\n  // Donald: [\"./donaldHappy.gif\", \"./donaldNeutral.gif\", \"./donaldSad.gif\"]\n};\n\nclass CardList extends Component {\n  render() {\n    return (\n      <div style={list}>\n        {Object.keys(characters).map((key, i) => {\n          return (\n            <Card\n              key={i}\n              name={key}\n              images={Object.values(characters)[i]}\n              alive={true}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default CardList;\n","import React, { Component } from \"react\";\nimport Card from \"./Card.js\";\n\nconst list = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"wrap\",\n  justifyContent: \"center\",\n  margin: \"12px 1%\",\n  marginBottom: \"40px\"\n};\n\nlet characters = {\n  Theon: [\"./theonHappy.gif\", \"./theonNeutral.gif\", \"./theonSad.gif\"],\n  Cersei: [\"./cerseiHappy.gif\", \"./cerseiNeutral.gif\", \"./cerseiSad.gif\"],\n  Jaime: [\"./jaimeHappy.gif\", \"./jaimeNeutral.gif\", \"./jaimeSad.gif\"],\n  \"The Hound\": [\"./houndHappy.gif\", \"./houndNeutral.gif\", \"./houndSad.gif\"],\n  Euron: [\"./euronHappy.gif\", \"./euronNeutral.gif\", \"./euronSad.gif\"],\n  Jorah: [\"./jorahHappy.gif\", \"./jorahNeutral.gif\", \"./jorahSad.gif\"],\n  Melisandre: [\n    \"./melisandreHappy.gif\",\n    \"./melisandreNeutral.gif\",\n    \"./melisandreSad.gif\"\n  ]\n};\n\nclass CardListDead extends Component {\n  render() {\n    return (\n      <div style={list}>\n        {Object.keys(characters).map((key, i) => {\n          return (\n            <Card\n              key={i}\n              name={key}\n              images={Object.values(characters)[i]}\n              alive={false}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default CardListDead;\n","import React from \"react\";\n\nconst container = {\n  width: \"100%\",\n  height: \"92px\",\n  display: \"flex\",\n  flexDirection: \"row\",\n  justifyContent: \"center\",\n  backgroundColor: \"#FBFBFB\",\n  boxShadow: \"0px 3px 6px 0px rgba(0,0,0,0.15)\",\n  position: \"static\",\n  margin: \"0px 0px\"\n};\n\nconst headerText = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"flex-start\",\n  margin: \"auto 0px\",\n  marginLeft: \"8px\",\n  marginRight: \"16px\",\n  height: \"100%\",\n  clear: \"both\",\n  cursor: \"pointer\"\n};\n\n// const headerTitle = {\n//   margin: \"0px 0px\"\n// };\n\nconst headerSub = {\n  fontFamily: \"Trajan Pro\",\n  textAlign: \"left\",\n  fontWeight: \"400\",\n  fontSize: \"1.2rem\",\n  color: \"#272320\",\n  margin: \"4px 0px 0px 0px\"\n};\n\n// const nav = {\n//   display: \"flex\",\n//   flexDirection: \"row\",\n//   alignItems: \"center\",\n//   justifyContent: \"space-between\",\n//   marginRight: \"5%\"\n// };\n\n// const navText = {\n//   margin: \"0px 10px\",\n//   fontFamily: \"Trajan Pro\",\n//   fontSize: \"20px\",\n//   color: \"#272320\",\n//   textAlign: \"center\"\n// };\n\nconst Header = () => {\n  return (\n    <div style={container}>\n      <img\n        alt=\"ravenlogo\"\n        src=\"./ravenlogo.png\"\n        style={{\n          width: \"64px\",\n          height: \"64px\",\n          margin: \"auto 0px\",\n          marginLeft: \"16px\",\n          cursor: \"pointer\"\n        }}\n        onClick={() => window.location.reload()}\n      />\n      <div style={headerText} onClick={() => window.location.reload()}>\n        <h1 style={headerSub}>\n          How Twitter Feels About GOT Characters Right Now\n        </h1>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n\n// <h3 style={headerTitle}>Game of Thrones</h3>\n","import React from \"react\";\n\nconst container = {\n  width: \"100%\",\n  height: \"56px\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  backgroundColor: \"#FBFBFB\",\n  boxShadow: \"0px 0px 6px 0px rgba(0,0,0,0.15)\",\n  position: \"relative\",\n  bottom: \"0\",\n  margin: \"0px 0px\"\n};\n\nconst headerSub = {\n  fontFamily: \"Trajan Pro\",\n  textAlign: \"center\",\n  fontWeight: \"400\",\n  fontSize: \"16px\",\n  color: \"#272320\",\n  margin: \"0px\"\n};\n\nconst Footer = () => {\n  return (\n    <div style={container}>\n      <p style={headerSub}>\n        Made by <a href=\"https://edfilbasan.github.io/work\">Lord Edfil</a> &amp;{\" \"}\n        <a href=\"https://github.com/Gnuck\">King Nick </a>\n      </p>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport CardList from \"./components/CardList.js\";\nimport CardListDead from \"./components/CardListDead.js\";\nimport Header from \"./components/Header.js\";\nimport Footer from \"./components/Footer.js\";\nimport { firebase_config } from \"./utils/apiKey.js\";\nimport { tachyons } from \"tachyons\";\nimport Firebase from \"firebase\";\n\nFirebase.initializeApp(firebase_config);\n\nclass GotSentiment extends Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <CardList />\n        <h1 style={{ textAlign: \"center\", marginBottom: \"0px\" }}>\n          PRESS{\" \"}\n          <span\n            style={{\n              fontWeight: \"1000\",\n              color: \"#407398\"\n            }}\n          >\n            F\n          </span>{\" \"}\n          TO PAY RESPECTS\n        </h1>\n        <CardListDead />\n        <Footer />\n      </div>\n    );\n  }\n  g;\n}\n\nexport default GotSentiment;\n\n// ONLINE STATUS TEXT. ADD WHENVER.\n// <h3\n// style={{ textAlign: \"center\", color: \"#732727\", marginTop: \"20px\" }}\n// >\n\n// </h3>\n","// export const firebase_config = {\r\n//   apiKey: \"AIzaSyCGXuGAww1Q36nCUt35ZHw4VAOtqPxApY0\",\r\n//   authDomain: \"gotsentiment.firebaseapp.com\",\r\n//   databaseURL: \"https://gotsentiment.firebaseio.com\",\r\n//   projectId: \"gotsentiment\",\r\n//   storageBucket: \"gotsentiment.appspot.com\",\r\n//   messagingSenderId: \"521626027009\"\r\n// };\r\n\r\nexport const firebase_config = {\r\n  apiKey: \"AIzaSyCGxzVQOipVPaff8JXNCJ91jBcb2hgJicE\",\r\n  authDomain: \"gotsentiment2.firebaseapp.com\",\r\n  databaseURL: \"https://gotsentiment2.firebaseio.com\",\r\n  projectId: \"gotsentiment2\",\r\n  storageBucket: \"gotsentiment2.appspot.com\",\r\n  messagingSenderId: \"867382253145\",\r\n  appId: \"1:867382253145:web:74e86df908739b1d\"\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}